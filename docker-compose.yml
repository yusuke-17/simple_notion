version: '3.8'
services:
  db:
    image: postgres:18-alpine
    environment:
      POSTGRES_DB: notion_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/run/postgresql
    restart: unless-stopped

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD:-password}@db:5432/notion_app?sslmode=disable
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
      PORT: 8080
      GIN_MODE: release
    security_opt:
      - no-new-privileges:true
    read_only: true
    volumes:
      - uploads_data:/uploads  # Image uploads directory
    tmpfs:
      - /tmp
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/main", "--health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: ""  # 本番では相対パスを使用（nginxプロキシ経由）
    ports:
      - "3000:8080"
    depends_on:
      - backend
    environment:
      NODE_ENV: production
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/cache/nginx
      - /var/run
      - /run
      - /var/cache/nginx/client_temp
      - /var/cache/nginx/proxy_temp
      - /var/cache/nginx/fastcgi_temp
      - /var/cache/nginx/uwsgi_temp
      - /var/cache/nginx/scgi_temp
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sh", "-c", "test -f /usr/share/nginx/html/index.html"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  postgres_data:
  uploads_data:  # Persistent storage for uploaded images
