name: Unit Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # 手動実行を許可

jobs:
  frontend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run unit tests
      run: npm run test:coverage

    - name: Upload frontend test coverage
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: frontend-test-coverage
        path: frontend/coverage/
        retention-days: 7

    - name: Build project
      run: npm run build

  backend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install dependencies
      run: go mod download

    - name: Run Go unit tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Generate coverage report
      run: go tool cover -html=coverage.out -o coverage.html

    - name: Upload backend test coverage
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: backend-test-coverage
        path: |
          backend/coverage.out
          backend/coverage.html
        retention-days: 7

  docker-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build backend Docker image for testing
      run: |
        docker build -f backend/Dockerfile.dev -t backend-test:latest backend/

    - name: Run backend tests in Docker
      run: |
        docker run --rm -v ${{ github.workspace }}/backend:/app -w /app backend-test:latest \
          sh -c "go test -v -race -coverprofile=coverage.out ./... && go tool cover -html=coverage.out -o coverage.html"

    - name: Build frontend Docker image for testing
      run: |
        docker build -f frontend/Dockerfile.dev -t frontend-test:latest frontend/

    - name: Run frontend tests in Docker
      run: |
        docker run --rm -v ${{ github.workspace }}/frontend:/app -w /app frontend-test:latest \
          npm run test:coverage

    - name: Upload Docker test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: docker-test-results
        path: |
          backend/coverage.out
          backend/coverage.html
          frontend/coverage/
        retention-days: 7
