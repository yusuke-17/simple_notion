name: Frontend Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run unit tests
      run: npm run test

    - name: Build project
      run: npm run build

  e2e-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Build project
      run: npm run build

    - name: Start dev server
      run: |
        npm run dev &
        DEV_PID=$!
        echo "Started dev server with PID: $DEV_PID"
        sleep 10
        echo "Checking if process is still running..."
        if ps -p $DEV_PID > /dev/null; then
          echo "Dev server is running"
        else
          echo "Dev server has stopped"
          exit 1
        fi
      env:
        CI: true

    - name: Check server status
      run: |
        echo "Checking port 5173..."
        netstat -tuln | grep 5173 || echo "Port 5173 not found"
        echo "Checking running processes..."
        ps aux | grep -E "(node|vite)" | grep -v grep || echo "No Node/Vite processes found"

    - name: Wait for server
      run: |
        echo "Waiting for server to be ready..."
        npx wait-on http://localhost:5173 --timeout 60000 --interval 1000 --verbose
      timeout-minutes: 2

    - name: Run Playwright tests
      run: npm run test:e2e

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: frontend/playwright-report/
        retention-days: 30
