version: '3.8'
services:
  db:
    image: postgres:18-alpine
    environment:
      POSTGRES_DB: notion_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    # 開発環境ではセキュリティ制約を緩める
    tmpfs:
      - /tmp

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD:-password}@db:5432/notion_app?sslmode=disable
      JWT_SECRET: ${JWT_SECRET:-CHANGE_THIS_TO_A_STRONG_RANDOM_KEY_IN_PRODUCTION}
      PORT: 8080
      GIN_MODE: debug
      ENVIRONMENT: development
    volumes:
      - ./backend:/app
      - /app/tmp
      - go_cache:/go/pkg/mod  # Go modules cache
    working_dir: /app
    # 開発環境では自動再起動
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    depends_on:
      - backend
    environment:
      NODE_ENV: development
      VITE_API_BASE_URL: http://localhost:8080
      # HMR (Hot Module Replacement) の設定
      VITE_HMR_HOST: localhost
      VITE_HMR_PORT: 5173
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - node_cache:/root/.npm  # npm cache
    working_dir: /app
    # HMRのためのポート設定
    command: npm run dev -- --host 0.0.0.0 --port 5173
    # 開発環境では自動再起動
    restart: unless-stopped

volumes:
  postgres_data:
  go_cache:  # Go modules cache volume
  node_cache:  # npm cache volume
